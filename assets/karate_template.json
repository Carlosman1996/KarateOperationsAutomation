{
    "tags": [
        "@ignore"
    ],
    "feature": {
        "comment": ""
    },
    "background": {
        "comment": "",
        "steps": [
            {
                "block": 0,
                "comment": "",
                "operation": "* url urls.wscUrl"
            }
        ]
    },
    "scenario": {
        "comment": "",
        "steps": [
            {
                "block": 0,
                "comment": "",
                "operation": "* def req = __arg"
            },
            {
                "block": 0,
                "comment": "",
                "operation": "* def authHeader = call read('classpath:karate-auth.js') req.auth"
            },
            {
                "block": 0,
                "comment": "",
                "operation": "* def params = req.params || {}"
            },
            {
                "block": 0,
                "comment": "",
                "operation": "* def headers = karate.merge(req.headers || {}, authHeader || {})"
            },
            {
                "block": 0,
                "comment": "",
                "operation": "* def body = req.body || {}"
            },
            {
                "block": 1,
                "comment": "HTTP call",
                "operation": "Given path <endpoint>"
            },
            {
                "block": 1,
                "comment": "",
                "operation": "And params params"
            },
            {
                "block": 1,
                "comment": "",
                "operation": "And headers headers"
            },
            {
                "block": 1,
                "comment": "",
                "operation": "And request body"
            },
            {
                "block": 1,
                "comment": "",
                "operation": "When method <method>"
            },
            {
                "block": 2,
                "comment": "Validate status code",
                "operation": "* def expectedStatusCode = req.statusCode || responseStatus"
            },
            {
                "block": 2,
                "comment": "",
                "operation": "* match responseStatus == expectedStatusCode"
            },
            {
                "block": 3,
                "comment": "Validate general schema",
                "operation": "* def responseValidator = req.responseMatches? req.responseMatches : {}"
            },
            {
                "block": 3,
                "comment": "",
                "operation": "* match response contains responseValidator"
            }
        ]
    }
}
