[
    {
      "comment": "<key_description> section",
      "operation": "* def default<key_validation> = <default<key_validation>>"
    },
    {
      "comment": "",
      "operation": "* def response<key_validation> = response<previous_key>[0].<key>? response<previous_key>[0].<key>.length > 0? response<previous_key>[0].<key> : default<key_validation> : default<key_validation>"
    },
    {
      "comment": "Validate <key_description> schema",
      "operation": "* def response<key_validation>Validator = req.response<key_validation>Matches? req.response<key_validation>Matches : []"
    },
    {
      "comment": "",
      "operation": "* match response<key_validation> contains response<key_validation>Validator"
    },
    {
      "comment": "Validate each element <key_description> schema",
      "operation": "* def response<key_validation>Validator = req.response<key_validation>EachMatches? req.response<key_validation>EachMatches : {}"
    },
    {
      "comment": "",
      "operation": "* def response<key_validation>Each = req.response<key_validation>EachMatches? response<key_validation> : [{}]"
    },
    {
      "comment": "",
      "operation": "* match each response<key_validation>Each contains response<key_validation>Validator"
    },
    {
      "comment": "Validate element <key_description> index schema",
      "operation": "* def response<key_validation>IndexValidator = req.response<key_validation>IndexMatches? req.response<key_validation>IndexMatches : {}"
    },
    {
      "comment": "",
      "operation": "* def response<key_validation>Index = req.response<key_validation>IndexMatches? response<key_validation>[req.index<key_validation>] : {}"
    },
    {
      "comment": "",
      "operation": "* match response<key_validation>Index contains response<key_validation>IndexValidator"
    }
]
